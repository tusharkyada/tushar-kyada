<link rel="stylesheet" href="{{ 'product-grid-with-popup.css' | asset_url }}">

{% style %}
  .section-padding-{{ section.id }} {
      padding-top: {{ section.settings.section-padding-top }}px;
      padding-bottom: {{ section.settings.section-padding-bottom }}px;
  }
  @media and screen (max-width: 768px) {
      .section-padding-{{ section.id }} {
          padding-top: {{ section.settings.section-padding-top | times: 0.8 }}px;
          padding-bottom: {{ section.settings.section-padding-bottom | times: 0.8 }}px;
      }
  }
{% endstyle %}

<section
  class="product-grid-popup-container page-width section-padding-{{ section.id }}"
  {{ section.shopify_attributes }}
>
  {% if section.settings.heading != blank %}
    <div class="product-grid-header">
      <h2 class="section-title h2">{{ section.settings.heading }}</h2>
    </div>
  {% endif %}

  <div class="product-grid" style="--columns-mobile: {{ section.settings.columns_mobile }};">
    {% for block in section.blocks %}
      {% liquid
        assign product = block.settings.product
        assign current_product_index = forloop.index0
      %}
      <div class="product-item" data-product-index="{{ current_product_index }}">
        <div class="product-image-wrapper">
          {% if product != blank and product.featured_image %}
            <img
              src="{{ product.featured_image | image_url: width: 500 }}"
              alt="{{ product.featured_image.alt | escape }}"
              class="product-image-{{ section.id }} product-image"
              loading="lazy"
              width=""
              height=""
            >
          {% else %}
            <div class="product-placeholder">
              {{ 'product-apparel-1' | placeholder_svg_tag }}
            </div>
          {% endif %}
          <div
            class="product-icon"
            style="--X-position: {{ block.settings.x-position }}%; --Y-position: {{ block.settings.y-position }}%;"
          >
            <svg width="11" height="11" viewBox="0 0 11 11" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M5.3457 1.04175V9.50329" stroke="black" stroke-width="1.5" stroke-linecap="square" stroke-linejoin="round"/>
              <path d="M1.11523 5.27246H9.57677" stroke="black" stroke-width="1.5" stroke-linecap="square" stroke-linejoin="round"/>
            </svg>
          </div>
        </div>
      </div>
    {% endfor %}
  </div>

  <div class="product-popup-{{ section.id }} product-popup">
    <div class="popup-content">
      <button class="popup-close" aria-label="Close">âœ•</button>
      <div class="popup-grid">
        <div class="popup-image-wrapper">
          <img
            src=""
            alt=""
            class="popup-image"
            loading="lazy"
            width=""
            height=""
          >
        </div>
        <div class="popup-details">
          <h2 class="popup-title"></h2>
          <div class="popup-price"></div>
          <div class="popup-description"></div>
          <form class="popup-form-{{ section.id }}">
            <div class="popup-variants"></div>
            <button
              type="submit"
              class="add-to-cart"
              style="--bg-color: {{ section.settings.button_bg_color }}; --text-color: {{ section.settings.button_text_color }};"
            >
              <span class="loading"></span>
              <span class="button-text">{{ section.settings.add_to_cart_text }}</span>
            </button>
            <div class="error-message"></div>
            <div class="success-message"></div>
          </form>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  function initProductGridSection() {
    const products = [
      {% for block in section.blocks %}
        {% liquid assign product = block.settings.product %}
        {% if product != blank %}
          {
            id: {{ product.id }},
            title: {{ product.title | json }},
            handle: {{ product.handle | json }},
            price: {{ product.price | money | json }},
            description: {{ product.description | strip_html | truncatewords: 30 | json }},
            featured_image: {{ product.featured_image | image_url: width: 800 | json }},
            variants: {{ product.variants | json }},
            options: {{ product.options | json }}
          },
        {% else %}
          null,
        {% endif %}
      {% endfor %}
    ];

    const settings = {
      addToCartText: {{ section.settings.add_to_cart_text | json }},
      moneyFormat: {{ shop.money_format | json }}
    };

    const sectionId = '{{ section.id }}';
    const root = document.querySelector(`product-grid-section-${sectionId}`) || document;

    const dom = {
      productItems: root.querySelectorAll(`.product-item`),
      popup: root.querySelector(`.product-popup-${sectionId}`),
      popupContent: root.querySelector(`.popup-content`),
      closeButton: root.querySelector(`.popup-close`),
      popupImage: root.querySelector(`.popup-image`),
      popupTitle: root.querySelector(`.popup-title`),
      popupPrice: root.querySelector(`.popup-price`),
      popupDescription: root.querySelector(`.popup-description`),
      popupVariants: root.querySelector(`.popup-variants`),
      addToCartButton: root.querySelector(`.add-to-cart`),
      addToCartForm: root.querySelector(`.popup-form-${sectionId}`),
      loadingSpinner: root.querySelector(`.loading`),
      errorMessage: root.querySelector(`.error-message`),
      successMessage: root.querySelector(`.success-message`),
      buttonText: root.querySelector(`.button-text`),
    };

    let currentProductIndex = null;
    let currentVariants = {};

    function openPopup(index) {
      const product = products[index];
      if (!product) return;

      currentProductIndex = index;

      dom.popupImage.src = product.featured_image || '';
      dom.popupImage.alt = product.title;
      dom.popupTitle.textContent = product.title;
      dom.popupPrice.textContent = product.price;
      dom.popupDescription.textContent = product.description;
      dom.errorMessage.style.display = 'none';
      dom.successMessage.style.display = 'none';
      dom.loadingSpinner.style.display = 'none';
      dom.buttonText.textContent = settings.addToCartText;
      dom.addToCartButton.disabled = false;

      showVariantSelectors(product);
      dom.popup.classList.add('active');
      document.body.style.overflow = 'hidden';
    }

    function setupEvents() {
      dom.productItems.forEach((item, index) => {
        item.addEventListener('click', () => {
          const idx = parseInt(item.dataset.productIndex);
          if (products[idx]) openPopup(idx);
        });
      });

      dom.closeButton.addEventListener('click', closePopup);
      dom.popup.addEventListener('click', (e) => {
        if (e.target === dom.popup) closePopup();
      });

      dom.addToCartForm.addEventListener('submit', addToCart);
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') closePopup();
      });
    }

    setupEvents();
  }

  document.addEventListener('DOMContentLoaded', initProductGridSection);
</script>

{% schema %}
{
  "name": "Product Grid with Popup",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "label": "Columns on mobile",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "2"
    },
    {
      "type": "header",
      "content": "Popup Settings"
    },
    {
      "type": "text",
      "id": "add_to_cart_text",
      "label": "Add to cart button text",
      "default": "Add to cart"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "button_bg_color",
      "label": "Button background",
      "default": "#000f9f"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Section Padding"
    },
    {
      "type": "range",
      "id": "section-padding-top",
      "label": "Section Padding Top",
      "step": 2,
      "min": 0,
      "max": 100,
      "default": 40,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "section-padding-bottom",
      "label": "Section Padding Bottom",
      "step": 2,
      "min": 0,
      "max": 100,
      "default": 40,
      "unit": "px"
    }
  ],
  "blocks": [
    {
      "type": "product_item",
      "name": "Product",
      "settings": [
        { "type": "product", "id": "product", "label": "Select Product" },
        { "type": "range", "id": "x-position", "label": "X Position", "default": 50, "step": 1, "min": 1, "max": 100 },
        { "type": "range", "id": "y-position", "label": "Y Position", "default": 50, "step": 1, "min": 1, "max": 100 }
      ]
    }
  ],
  "presets": [{ "name": "Product Grid with Popup" }]
}
{% endschema %}
